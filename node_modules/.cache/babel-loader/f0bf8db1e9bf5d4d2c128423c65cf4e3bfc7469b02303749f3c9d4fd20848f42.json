{"ast":null,"code":"var _jsxFileName = \"Z:\\\\Alezin\\\\alessandrozingaretti_web\\\\il-mio-progetto-react\\\\src\\\\TextPressure.jsx\",\n  _s = $RefreshSig$();\n// Component ported from https://codepen.io/JuanFuentes/full/rgXKGQ\n\nimport { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextPressure = ({\n  text = 'Compressa',\n  fontFamily = 'Compressa VF',\n  // This font is just an example, you should not use it in commercial projects.\n  fontUrl = 'https://res.cloudinary.com/dr6lvwubh/raw/upload/v1529908256/CompressaPRO-GX.woff2',\n  width = true,\n  weight = true,\n  italic = true,\n  alpha = false,\n  flex = true,\n  stroke = false,\n  scale = false,\n  textColor = '#FFFFFF',\n  strokeColor = '#FF0000',\n  className = '',\n  minFontSize = 24\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const titleRef = useRef(null);\n  const spansRef = useRef([]);\n  const mouseRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const cursorRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const [fontSize, setFontSize] = useState(minFontSize);\n  const [scaleY, setScaleY] = useState(1);\n  const [lineHeight, setLineHeight] = useState(1);\n  const chars = text.split('');\n  const dist = (a, b) => {\n    const dx = b.x - a.x;\n    const dy = b.y - a.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  };\n  useEffect(() => {\n    const handleMouseMove = e => {\n      cursorRef.current.x = e.clientX;\n      cursorRef.current.y = e.clientY;\n    };\n    const handleTouchMove = e => {\n      const t = e.touches[0];\n      cursorRef.current.x = t.clientX;\n      cursorRef.current.y = t.clientY;\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('touchmove', handleTouchMove, {\n      passive: false\n    });\n    if (containerRef.current) {\n      const {\n        left,\n        top,\n        width,\n        height\n      } = containerRef.current.getBoundingClientRect();\n      mouseRef.current.x = left + width / 2;\n      mouseRef.current.y = top + height / 2;\n      cursorRef.current.x = mouseRef.current.x;\n      cursorRef.current.y = mouseRef.current.y;\n    }\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('touchmove', handleTouchMove);\n    };\n  }, []);\n  const setSize = () => {\n    if (!containerRef.current || !titleRef.current) return;\n    const {\n      width: containerW,\n      height: containerH\n    } = containerRef.current.getBoundingClientRect();\n    let newFontSize = containerW / (chars.length / 2);\n    newFontSize = Math.max(newFontSize, minFontSize);\n    setFontSize(newFontSize);\n    setScaleY(1);\n    setLineHeight(1);\n    requestAnimationFrame(() => {\n      if (!titleRef.current) return;\n      const textRect = titleRef.current.getBoundingClientRect();\n      if (scale && textRect.height > 0) {\n        const yRatio = containerH / textRect.height;\n        setScaleY(yRatio);\n        setLineHeight(yRatio);\n      }\n    });\n  };\n  useEffect(() => {\n    setSize();\n    window.addEventListener('resize', setSize);\n    return () => window.removeEventListener('resize', setSize);\n    // eslint-disable-next-line\n  }, [scale, text]);\n  useEffect(() => {\n    let rafId;\n    const animate = () => {\n      mouseRef.current.x += (cursorRef.current.x - mouseRef.current.x) / 15;\n      mouseRef.current.y += (cursorRef.current.y - mouseRef.current.y) / 15;\n      if (titleRef.current) {\n        const titleRect = titleRef.current.getBoundingClientRect();\n        const maxDist = titleRect.width / 2;\n        spansRef.current.forEach(span => {\n          if (!span) return;\n          const rect = span.getBoundingClientRect();\n          const charCenter = {\n            x: rect.x + rect.width / 2,\n            y: rect.y + rect.height / 2\n          };\n          const d = dist(mouseRef.current, charCenter);\n          const getAttr = (distance, minVal, maxVal) => {\n            const val = maxVal - Math.abs(maxVal * distance / maxDist);\n            return Math.max(minVal, val + minVal);\n          };\n          const wdth = width ? Math.floor(getAttr(d, 5, 200)) : 100;\n          const wght = weight ? Math.floor(getAttr(d, 100, 900)) : 400;\n          const italVal = italic ? getAttr(d, 0, 1).toFixed(2) : 0;\n          const alphaVal = alpha ? getAttr(d, 0, 1).toFixed(2) : 1;\n          span.style.opacity = alphaVal;\n          span.style.fontVariationSettings = `'wght' ${wght}, 'wdth' ${wdth}, 'ital' ${italVal}`;\n        });\n      }\n      rafId = requestAnimationFrame(animate);\n    };\n    animate();\n    return () => cancelAnimationFrame(rafId);\n  }, [width, weight, italic, alpha, chars.length]);\n  const dynamicClassName = [className, flex ? 'flex' : '', stroke ? 'stroke' : ''].filter(Boolean).join(' ');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      background: 'transparent'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        @font-face {\n          font-family: '${fontFamily}';\n          src: url('${fontUrl}');\n          font-style: normal;\n        }\n\n        .flex {\n          display: flex;\n          justify-content: space-between;\n        }\n\n        .stroke span {\n          position: relative;\n          color: ${textColor};\n        }\n        .stroke span::after {\n          content: attr(data-char);\n          position: absolute;\n          left: 0;\n          top: 0;\n          color: transparent;\n          z-index: -1;\n          -webkit-text-stroke-width: 3px;\n          -webkit-text-stroke-color: ${strokeColor};\n        }\n\n        .text-pressure-title {\n          color: ${textColor};\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      ref: titleRef,\n      className: `text-pressure-title ${dynamicClassName}`,\n      style: {\n        fontFamily,\n        textTransform: 'uppercase',\n        fontSize: fontSize,\n        lineHeight,\n        transform: `scale(1, ${scaleY})`,\n        transformOrigin: 'center top',\n        margin: 0,\n        textAlign: 'center',\n        userSelect: 'none',\n        whiteSpace: 'nowrap',\n        fontWeight: 100,\n        width: '100%'\n      },\n      children: chars.map((char, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n        ref: el => spansRef.current[i] = el,\n        \"data-char\": char,\n        style: {\n          display: 'inline-block',\n          color: stroke ? undefined : textColor\n        },\n        children: char\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(TextPressure, \"J8llmEpNEjfPp6uZcGdS8ivn7Jo=\");\n_c = TextPressure;\nexport default TextPressure;\nvar _c;\n$RefreshReg$(_c, \"TextPressure\");","map":{"version":3,"names":["useEffect","useRef","useState","jsxDEV","_jsxDEV","TextPressure","text","fontFamily","fontUrl","width","weight","italic","alpha","flex","stroke","scale","textColor","strokeColor","className","minFontSize","_s","containerRef","titleRef","spansRef","mouseRef","x","y","cursorRef","fontSize","setFontSize","scaleY","setScaleY","lineHeight","setLineHeight","chars","split","dist","a","b","dx","dy","Math","sqrt","handleMouseMove","e","current","clientX","clientY","handleTouchMove","t","touches","window","addEventListener","passive","left","top","height","getBoundingClientRect","removeEventListener","setSize","containerW","containerH","newFontSize","length","max","requestAnimationFrame","textRect","yRatio","rafId","animate","titleRect","maxDist","forEach","span","rect","charCenter","d","getAttr","distance","minVal","maxVal","val","abs","wdth","floor","wght","italVal","toFixed","alphaVal","style","opacity","fontVariationSettings","cancelAnimationFrame","dynamicClassName","filter","Boolean","join","ref","position","background","children","fileName","_jsxFileName","lineNumber","columnNumber","textTransform","transform","transformOrigin","margin","textAlign","userSelect","whiteSpace","fontWeight","map","char","i","el","display","color","undefined","_c","$RefreshReg$"],"sources":["Z:/Alezin/alessandrozingaretti_web/il-mio-progetto-react/src/TextPressure.jsx"],"sourcesContent":["// Component ported from https://codepen.io/JuanFuentes/full/rgXKGQ\r\n\r\nimport { useEffect, useRef, useState } from 'react';\r\n\r\nconst TextPressure = ({\r\n  text = 'Compressa',\r\n  fontFamily = 'Compressa VF',\r\n  // This font is just an example, you should not use it in commercial projects.\r\n  fontUrl = 'https://res.cloudinary.com/dr6lvwubh/raw/upload/v1529908256/CompressaPRO-GX.woff2',\r\n\r\n  width = true,\r\n  weight = true,\r\n  italic = true,\r\n  alpha = false,\r\n\r\n  flex = true,\r\n  stroke = false,\r\n  scale = false,\r\n\r\n  textColor = '#FFFFFF',\r\n  strokeColor = '#FF0000',\r\n  className = '',\r\n\r\n  minFontSize = 24\r\n}) => {\r\n  const containerRef = useRef(null);\r\n  const titleRef = useRef(null);\r\n  const spansRef = useRef([]);\r\n\r\n  const mouseRef = useRef({ x: 0, y: 0 });\r\n  const cursorRef = useRef({ x: 0, y: 0 });\r\n\r\n  const [fontSize, setFontSize] = useState(minFontSize);\r\n  const [scaleY, setScaleY] = useState(1);\r\n  const [lineHeight, setLineHeight] = useState(1);\r\n\r\n  const chars = text.split('');\r\n\r\n  const dist = (a, b) => {\r\n    const dx = b.x - a.x;\r\n    const dy = b.y - a.y;\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleMouseMove = e => {\r\n      cursorRef.current.x = e.clientX;\r\n      cursorRef.current.y = e.clientY;\r\n    };\r\n    const handleTouchMove = e => {\r\n      const t = e.touches[0];\r\n      cursorRef.current.x = t.clientX;\r\n      cursorRef.current.y = t.clientY;\r\n    };\r\n\r\n    window.addEventListener('mousemove', handleMouseMove);\r\n    window.addEventListener('touchmove', handleTouchMove, { passive: false });\r\n\r\n    if (containerRef.current) {\r\n      const { left, top, width, height } = containerRef.current.getBoundingClientRect();\r\n      mouseRef.current.x = left + width / 2;\r\n      mouseRef.current.y = top + height / 2;\r\n      cursorRef.current.x = mouseRef.current.x;\r\n      cursorRef.current.y = mouseRef.current.y;\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener('mousemove', handleMouseMove);\r\n      window.removeEventListener('touchmove', handleTouchMove);\r\n    };\r\n  }, []);\r\n\r\n  const setSize = () => {\r\n    if (!containerRef.current || !titleRef.current) return;\r\n\r\n    const { width: containerW, height: containerH } = containerRef.current.getBoundingClientRect();\r\n\r\n    let newFontSize = containerW / (chars.length / 2);\r\n    newFontSize = Math.max(newFontSize, minFontSize);\r\n\r\n    setFontSize(newFontSize);\r\n    setScaleY(1);\r\n    setLineHeight(1);\r\n\r\n    requestAnimationFrame(() => {\r\n      if (!titleRef.current) return;\r\n      const textRect = titleRef.current.getBoundingClientRect();\r\n\r\n      if (scale && textRect.height > 0) {\r\n        const yRatio = containerH / textRect.height;\r\n        setScaleY(yRatio);\r\n        setLineHeight(yRatio);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSize();\r\n    window.addEventListener('resize', setSize);\r\n    return () => window.removeEventListener('resize', setSize);\r\n    // eslint-disable-next-line\r\n  }, [scale, text]);\r\n\r\n  useEffect(() => {\r\n    let rafId;\r\n    const animate = () => {\r\n      mouseRef.current.x += (cursorRef.current.x - mouseRef.current.x) / 15;\r\n      mouseRef.current.y += (cursorRef.current.y - mouseRef.current.y) / 15;\r\n\r\n      if (titleRef.current) {\r\n        const titleRect = titleRef.current.getBoundingClientRect();\r\n        const maxDist = titleRect.width / 2;\r\n\r\n        spansRef.current.forEach(span => {\r\n          if (!span) return;\r\n\r\n          const rect = span.getBoundingClientRect();\r\n          const charCenter = {\r\n            x: rect.x + rect.width / 2,\r\n            y: rect.y + rect.height / 2\r\n          };\r\n\r\n          const d = dist(mouseRef.current, charCenter);\r\n\r\n          const getAttr = (distance, minVal, maxVal) => {\r\n            const val = maxVal - Math.abs((maxVal * distance) / maxDist);\r\n            return Math.max(minVal, val + minVal);\r\n          };\r\n\r\n          const wdth = width ? Math.floor(getAttr(d, 5, 200)) : 100;\r\n          const wght = weight ? Math.floor(getAttr(d, 100, 900)) : 400;\r\n          const italVal = italic ? getAttr(d, 0, 1).toFixed(2) : 0;\r\n          const alphaVal = alpha ? getAttr(d, 0, 1).toFixed(2) : 1;\r\n\r\n          span.style.opacity = alphaVal;\r\n          span.style.fontVariationSettings = `'wght' ${wght}, 'wdth' ${wdth}, 'ital' ${italVal}`;\r\n        });\r\n      }\r\n\r\n      rafId = requestAnimationFrame(animate);\r\n    };\r\n\r\n    animate();\r\n    return () => cancelAnimationFrame(rafId);\r\n  }, [width, weight, italic, alpha, chars.length]);\r\n\r\n  const dynamicClassName = [className, flex ? 'flex' : '', stroke ? 'stroke' : ''].filter(Boolean).join(' ');\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      style={{\r\n        position: 'relative',\r\n        width: '100%',\r\n        height: '100%',\r\n        background: 'transparent'\r\n      }}\r\n    >\r\n      <style>{`\r\n        @font-face {\r\n          font-family: '${fontFamily}';\r\n          src: url('${fontUrl}');\r\n          font-style: normal;\r\n        }\r\n\r\n        .flex {\r\n          display: flex;\r\n          justify-content: space-between;\r\n        }\r\n\r\n        .stroke span {\r\n          position: relative;\r\n          color: ${textColor};\r\n        }\r\n        .stroke span::after {\r\n          content: attr(data-char);\r\n          position: absolute;\r\n          left: 0;\r\n          top: 0;\r\n          color: transparent;\r\n          z-index: -1;\r\n          -webkit-text-stroke-width: 3px;\r\n          -webkit-text-stroke-color: ${strokeColor};\r\n        }\r\n\r\n        .text-pressure-title {\r\n          color: ${textColor};\r\n        }\r\n      `}</style>\r\n\r\n      <h1\r\n        ref={titleRef}\r\n        className={`text-pressure-title ${dynamicClassName}`}\r\n        style={{\r\n          fontFamily,\r\n          textTransform: 'uppercase',\r\n          fontSize: fontSize,\r\n          lineHeight,\r\n          transform: `scale(1, ${scaleY})`,\r\n          transformOrigin: 'center top',\r\n          margin: 0,\r\n          textAlign: 'center',\r\n          userSelect: 'none',\r\n          whiteSpace: 'nowrap',\r\n          fontWeight: 100,\r\n          width: '100%'\r\n        }}\r\n      >\r\n        {chars.map((char, i) => (\r\n          <span\r\n            key={i}\r\n            ref={el => (spansRef.current[i] = el)}\r\n            data-char={char}\r\n            style={{\r\n              display: 'inline-block',\r\n              color: stroke ? undefined : textColor\r\n            }}\r\n          >\r\n            {char}\r\n          </span>\r\n        ))}\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextPressure;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}