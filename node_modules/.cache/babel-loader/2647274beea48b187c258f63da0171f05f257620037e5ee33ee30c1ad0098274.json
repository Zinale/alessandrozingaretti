{"ast":null,"code":"import _objectSpread from\"Z:/Alezin/alessandrozingaretti/test-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useRef,useEffect,useState}from'react';import{gsap}from'gsap';import{ScrollTrigger}from'gsap/ScrollTrigger';import{SplitText as GSAPSplitText}from'gsap/SplitText';import{useGSAP}from'@gsap/react';import{jsx as _jsx}from\"react/jsx-runtime\";gsap.registerPlugin(ScrollTrigger,GSAPSplitText,useGSAP);const SplitText=_ref=>{let{text,className='',delay=100,duration=0.6,ease='power3.out',splitType='chars',from={opacity:0,y:40},to={opacity:1,y:0},threshold=0.1,rootMargin='-100px',textAlign='center',tag='p',onLetterAnimationComplete}=_ref;const ref=useRef(null);const animationCompletedRef=useRef(false);const[fontsLoaded,setFontsLoaded]=useState(false);useEffect(()=>{if(document.fonts.status==='loaded'){setFontsLoaded(true);}else{document.fonts.ready.then(()=>{setFontsLoaded(true);});}},[]);useGSAP(()=>{if(!ref.current||!text||!fontsLoaded)return;const el=ref.current;if(el._rbsplitInstance){try{el._rbsplitInstance.revert();}catch(_){/* noop */}el._rbsplitInstance=null;}const startPct=(1-threshold)*100;const marginMatch=/^(-?\\d+(?:\\.\\d+)?)(px|em|rem|%)?$/.exec(rootMargin);const marginValue=marginMatch?parseFloat(marginMatch[1]):0;const marginUnit=marginMatch?marginMatch[2]||'px':'px';const sign=marginValue===0?'':marginValue<0?\"-=\".concat(Math.abs(marginValue)).concat(marginUnit):\"+=\".concat(marginValue).concat(marginUnit);const start=\"top \".concat(startPct,\"%\").concat(sign);let targets;const assignTargets=self=>{if(splitType.includes('chars')&&self.chars.length)targets=self.chars;if(!targets&&splitType.includes('words')&&self.words.length)targets=self.words;if(!targets&&splitType.includes('lines')&&self.lines.length)targets=self.lines;if(!targets)targets=self.chars||self.words||self.lines;};const splitInstance=new GSAPSplitText(el,{type:splitType,smartWrap:true,autoSplit:splitType==='lines',linesClass:'split-line',wordsClass:'split-word',charsClass:'split-char',reduceWhiteSpace:false,onSplit:self=>{assignTargets(self);const tween=gsap.fromTo(targets,_objectSpread({},from),_objectSpread(_objectSpread({},to),{},{duration,ease,stagger:delay/1000,scrollTrigger:{trigger:el,start,once:true,fastScrollEnd:true,anticipatePin:0.4},onComplete:()=>{animationCompletedRef.current=true;onLetterAnimationComplete===null||onLetterAnimationComplete===void 0?void 0:onLetterAnimationComplete();},willChange:'transform, opacity',force3D:true}));return tween;}});el._rbsplitInstance=splitInstance;return()=>{ScrollTrigger.getAll().forEach(st=>{if(st.trigger===el)st.kill();});try{splitInstance.revert();}catch(_){/* noop */}el._rbsplitInstance=null;};},{dependencies:[text,delay,duration,ease,splitType,JSON.stringify(from),JSON.stringify(to),threshold,rootMargin,fontsLoaded,onLetterAnimationComplete],scope:ref});const renderTag=()=>{const style={textAlign,overflow:'hidden',display:'inline-block',whiteSpace:'normal',wordWrap:'break-word',willChange:'transform, opacity'};const classes=\"split-parent \".concat(className);switch(tag){case'h1':return/*#__PURE__*/_jsx(\"h1\",{ref:ref,style:style,className:classes,children:text});case'h2':return/*#__PURE__*/_jsx(\"h2\",{ref:ref,style:style,className:classes,children:text});case'h3':return/*#__PURE__*/_jsx(\"h3\",{ref:ref,style:style,className:classes,children:text});case'h4':return/*#__PURE__*/_jsx(\"h4\",{ref:ref,style:style,className:classes,children:text});case'h5':return/*#__PURE__*/_jsx(\"h5\",{ref:ref,style:style,className:classes,children:text});case'h6':return/*#__PURE__*/_jsx(\"h6\",{ref:ref,style:style,className:classes,children:text});default:return/*#__PURE__*/_jsx(\"p\",{ref:ref,style:style,className:classes,children:text});}};return renderTag();};export default SplitText;","map":{"version":3,"names":["useRef","useEffect","useState","gsap","ScrollTrigger","SplitText","GSAPSplitText","useGSAP","jsx","_jsx","registerPlugin","_ref","text","className","delay","duration","ease","splitType","from","opacity","y","to","threshold","rootMargin","textAlign","tag","onLetterAnimationComplete","ref","animationCompletedRef","fontsLoaded","setFontsLoaded","document","fonts","status","ready","then","current","el","_rbsplitInstance","revert","_","startPct","marginMatch","exec","marginValue","parseFloat","marginUnit","sign","concat","Math","abs","start","targets","assignTargets","self","includes","chars","length","words","lines","splitInstance","type","smartWrap","autoSplit","linesClass","wordsClass","charsClass","reduceWhiteSpace","onSplit","tween","fromTo","_objectSpread","stagger","scrollTrigger","trigger","once","fastScrollEnd","anticipatePin","onComplete","willChange","force3D","getAll","forEach","st","kill","dependencies","JSON","stringify","scope","renderTag","style","overflow","display","whiteSpace","wordWrap","classes","children"],"sources":["Z:/Alezin/alessandrozingaretti/test-react/src/SplitText.jsx"],"sourcesContent":["import { useRef, useEffect, useState } from 'react';\r\nimport { gsap } from 'gsap';\r\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\r\nimport { SplitText as GSAPSplitText } from 'gsap/SplitText';\r\nimport { useGSAP } from '@gsap/react';\r\n\r\ngsap.registerPlugin(ScrollTrigger, GSAPSplitText, useGSAP);\r\n\r\nconst SplitText = ({\r\n  text,\r\n  className = '',\r\n  delay = 100,\r\n  duration = 0.6,\r\n  ease = 'power3.out',\r\n  splitType = 'chars',\r\n  from = { opacity: 0, y: 40 },\r\n  to = { opacity: 1, y: 0 },\r\n  threshold = 0.1,\r\n  rootMargin = '-100px',\r\n  textAlign = 'center',\r\n  tag = 'p',\r\n  onLetterAnimationComplete\r\n}) => {\r\n  const ref = useRef(null);\r\n  const animationCompletedRef = useRef(false);\r\n  const [fontsLoaded, setFontsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (document.fonts.status === 'loaded') {\r\n      setFontsLoaded(true);\r\n    } else {\r\n      document.fonts.ready.then(() => {\r\n        setFontsLoaded(true);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useGSAP(\r\n    () => {\r\n      if (!ref.current || !text || !fontsLoaded) return;\r\n      const el = ref.current;\r\n\r\n      if (el._rbsplitInstance) {\r\n        try {\r\n          el._rbsplitInstance.revert();\r\n        } catch (_) {\r\n          /* noop */\r\n        }\r\n        el._rbsplitInstance = null;\r\n      }\r\n\r\n      const startPct = (1 - threshold) * 100;\r\n      const marginMatch = /^(-?\\d+(?:\\.\\d+)?)(px|em|rem|%)?$/.exec(rootMargin);\r\n      const marginValue = marginMatch ? parseFloat(marginMatch[1]) : 0;\r\n      const marginUnit = marginMatch ? marginMatch[2] || 'px' : 'px';\r\n      const sign =\r\n        marginValue === 0\r\n          ? ''\r\n          : marginValue < 0\r\n            ? `-=${Math.abs(marginValue)}${marginUnit}`\r\n            : `+=${marginValue}${marginUnit}`;\r\n      const start = `top ${startPct}%${sign}`;\r\n\r\n      let targets;\r\n      const assignTargets = self => {\r\n        if (splitType.includes('chars') && self.chars.length) targets = self.chars;\r\n        if (!targets && splitType.includes('words') && self.words.length) targets = self.words;\r\n        if (!targets && splitType.includes('lines') && self.lines.length) targets = self.lines;\r\n        if (!targets) targets = self.chars || self.words || self.lines;\r\n      };\r\n\r\n      const splitInstance = new GSAPSplitText(el, {\r\n        type: splitType,\r\n        smartWrap: true,\r\n        autoSplit: splitType === 'lines',\r\n        linesClass: 'split-line',\r\n        wordsClass: 'split-word',\r\n        charsClass: 'split-char',\r\n        reduceWhiteSpace: false,\r\n        onSplit: self => {\r\n          assignTargets(self);\r\n          const tween = gsap.fromTo(\r\n            targets,\r\n            { ...from },\r\n            {\r\n              ...to,\r\n              duration,\r\n              ease,\r\n              stagger: delay / 1000,\r\n              scrollTrigger: {\r\n                trigger: el,\r\n                start,\r\n                once: true,\r\n                fastScrollEnd: true,\r\n                anticipatePin: 0.4\r\n              },\r\n              onComplete: () => {\r\n                animationCompletedRef.current = true;\r\n                onLetterAnimationComplete?.();\r\n              },\r\n              willChange: 'transform, opacity',\r\n              force3D: true\r\n            }\r\n          );\r\n          return tween;\r\n        }\r\n      });\r\n\r\n      el._rbsplitInstance = splitInstance;\r\n\r\n      return () => {\r\n        ScrollTrigger.getAll().forEach(st => {\r\n          if (st.trigger === el) st.kill();\r\n        });\r\n        try {\r\n          splitInstance.revert();\r\n        } catch (_) {\r\n          /* noop */\r\n        }\r\n        el._rbsplitInstance = null;\r\n      };\r\n    },\r\n    {\r\n      dependencies: [\r\n        text,\r\n        delay,\r\n        duration,\r\n        ease,\r\n        splitType,\r\n        JSON.stringify(from),\r\n        JSON.stringify(to),\r\n        threshold,\r\n        rootMargin,\r\n        fontsLoaded,\r\n        onLetterAnimationComplete\r\n      ],\r\n      scope: ref\r\n    }\r\n  );\r\n\r\n  const renderTag = () => {\r\n    const style = {\r\n      textAlign,\r\n      overflow: 'hidden',\r\n      display: 'inline-block',\r\n      whiteSpace: 'normal',\r\n      wordWrap: 'break-word',\r\n      willChange: 'transform, opacity'\r\n    };\r\n    const classes = `split-parent ${className}`;\r\n    switch (tag) {\r\n      case 'h1':\r\n        return (\r\n          <h1 ref={ref} style={style} className={classes}>\r\n            {text}\r\n          </h1>\r\n        );\r\n      case 'h2':\r\n        return (\r\n          <h2 ref={ref} style={style} className={classes}>\r\n            {text}\r\n          </h2>\r\n        );\r\n      case 'h3':\r\n        return (\r\n          <h3 ref={ref} style={style} className={classes}>\r\n            {text}\r\n          </h3>\r\n        );\r\n      case 'h4':\r\n        return (\r\n          <h4 ref={ref} style={style} className={classes}>\r\n            {text}\r\n          </h4>\r\n        );\r\n      case 'h5':\r\n        return (\r\n          <h5 ref={ref} style={style} className={classes}>\r\n            {text}\r\n          </h5>\r\n        );\r\n      case 'h6':\r\n        return (\r\n          <h6 ref={ref} style={style} className={classes}>\r\n            {text}\r\n          </h6>\r\n        );\r\n      default:\r\n        return (\r\n          <p ref={ref} style={style} className={classes}>\r\n            {text}\r\n          </p>\r\n        );\r\n    }\r\n  };\r\n  return renderTag();\r\n};\r\n\r\nexport default SplitText;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}