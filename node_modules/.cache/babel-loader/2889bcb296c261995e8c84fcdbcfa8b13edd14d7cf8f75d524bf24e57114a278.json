{"ast":null,"code":"var _jsxFileName = \"Z:\\\\Alezin\\\\alessandrozingaretti_web\\\\il-mio-progetto-react\\\\src\\\\Aurora.jsx\",\n  _s = $RefreshSig$();\nimport { Renderer, Program, Mesh, Color, Triangle } from 'ogl';\nimport { useEffect, useRef } from 'react';\nimport './Aurora.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VERT = `#version 300 es\nin vec2 position;\nvoid main() {\n  gl_Position = vec4(position, 0.0, 1.0);\n}\n`;\nconst FRAG = `#version 300 es\nprecision highp float;\n\nuniform float uTime;\nuniform float uAmplitude;\nuniform vec3 uColorStops[3];\nuniform vec2 uResolution;\nuniform float uBlend;\n\nout vec4 fragColor;\n\nvec3 permute(vec3 x) {\n  return mod(((x * 34.0) + 1.0) * x, 289.0);\n}\n\nfloat snoise(vec2 v){\n  const vec4 C = vec4(\n      0.211324865405187, 0.366025403784439,\n      -0.577350269189626, 0.024390243902439\n  );\n  vec2 i  = floor(v + dot(v, C.yy));\n  vec2 x0 = v - i + dot(i, C.xx);\n  vec2 i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n  i = mod(i, 289.0);\n\n  vec3 p = permute(\n      permute(i.y + vec3(0.0, i1.y, 1.0))\n    + i.x + vec3(0.0, i1.x, 1.0)\n  );\n\n  vec3 m = max(\n      0.5 - vec3(\n          dot(x0, x0),\n          dot(x12.xy, x12.xy),\n          dot(x12.zw, x12.zw)\n      ), \n      0.0\n  );\n  m = m * m;\n  m = m * m;\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n  m *= 1.79284291400159 - 0.85373472095314 * (a0*a0 + h*h);\n\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\nstruct ColorStop {\n  vec3 color;\n  float position;\n};\n\n#define COLOR_RAMP(colors, factor, finalColor) {              \\\n  int index = 0;                                            \\\n  for (int i = 0; i < 2; i++) {                               \\\n     ColorStop currentColor = colors[i];                    \\\n     bool isInBetween = currentColor.position <= factor;    \\\n     index = int(mix(float(index), float(i), float(isInBetween))); \\\n  }                                                         \\\n  ColorStop currentColor = colors[index];                   \\\n  ColorStop nextColor = colors[index + 1];                  \\\n  float range = nextColor.position - currentColor.position; \\\n  float lerpFactor = (factor - currentColor.position) / range; \\\n  finalColor = mix(currentColor.color, nextColor.color, lerpFactor); \\\n}\n\nvoid main() {\n  vec2 uv = gl_FragCoord.xy / uResolution;\n  \n  ColorStop colors[3];\n  colors[0] = ColorStop(uColorStops[0], 0.0);\n  colors[1] = ColorStop(uColorStops[1], 0.5);\n  colors[2] = ColorStop(uColorStops[2], 1.0);\n  \n  vec3 rampColor;\n  COLOR_RAMP(colors, uv.x, rampColor);\n  \n  float height = snoise(vec2(uv.x * 2.0 + uTime * 0.1, uTime * 0.25)) * 0.5 * uAmplitude;\n  height = exp(height);\n  height = (uv.y * 2.0 - height + 0.2);\n  float intensity = 0.6 * height;\n  \n  float midPoint = 0.20;\n  float auroraAlpha = smoothstep(midPoint - uBlend * 0.5, midPoint + uBlend * 0.5, intensity);\n  \n  vec3 auroraColor = intensity * rampColor;\n  \n  fragColor = vec4(auroraColor * auroraAlpha, auroraAlpha);\n}\n`;\nexport default function Aurora(props) {\n  _s();\n  const {\n    colorStops = ['#5227FF', '#7cff67', '#5227FF'],\n    amplitude = 1.0,\n    blend = 0.5\n  } = props;\n  const propsRef = useRef(props);\n  propsRef.current = props;\n  const ctnDom = useRef(null);\n  useEffect(() => {\n    const ctn = ctnDom.current;\n    if (!ctn) return;\n    const renderer = new Renderer({\n      alpha: true,\n      premultipliedAlpha: true,\n      antialias: true\n    });\n    const gl = renderer.gl;\n    gl.clearColor(0, 0, 0, 0);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.canvas.style.backgroundColor = 'transparent';\n    let program;\n    function resize() {\n      if (!ctn) return;\n      const width = ctn.offsetWidth;\n      const height = ctn.offsetHeight;\n      renderer.setSize(width, height);\n      if (program) {\n        program.uniforms.uResolution.value = [width, height];\n      }\n    }\n    window.addEventListener('resize', resize);\n    const geometry = new Triangle(gl);\n    if (geometry.attributes.uv) {\n      delete geometry.attributes.uv;\n    }\n    const colorStopsArray = colorStops.map(hex => {\n      const c = new Color(hex);\n      return [c.r, c.g, c.b];\n    });\n    program = new Program(gl, {\n      vertex: VERT,\n      fragment: FRAG,\n      uniforms: {\n        uTime: {\n          value: 0\n        },\n        uAmplitude: {\n          value: amplitude\n        },\n        uColorStops: {\n          value: colorStopsArray\n        },\n        uResolution: {\n          value: [ctn.offsetWidth, ctn.offsetHeight]\n        },\n        uBlend: {\n          value: blend\n        }\n      }\n    });\n    const mesh = new Mesh(gl, {\n      geometry,\n      program\n    });\n    ctn.appendChild(gl.canvas);\n    let animateId = 0;\n    const update = t => {\n      var _propsRef$current$amp, _propsRef$current$ble, _propsRef$current$col;\n      animateId = requestAnimationFrame(update);\n      const {\n        time = t * 0.01,\n        speed = 1.0\n      } = propsRef.current;\n      program.uniforms.uTime.value = time * speed * 0.1;\n      program.uniforms.uAmplitude.value = (_propsRef$current$amp = propsRef.current.amplitude) !== null && _propsRef$current$amp !== void 0 ? _propsRef$current$amp : 1.0;\n      program.uniforms.uBlend.value = (_propsRef$current$ble = propsRef.current.blend) !== null && _propsRef$current$ble !== void 0 ? _propsRef$current$ble : blend;\n      const stops = (_propsRef$current$col = propsRef.current.colorStops) !== null && _propsRef$current$col !== void 0 ? _propsRef$current$col : colorStops;\n      program.uniforms.uColorStops.value = stops.map(hex => {\n        const c = new Color(hex);\n        return [c.r, c.g, c.b];\n      });\n      renderer.render({\n        scene: mesh\n      });\n    };\n    animateId = requestAnimationFrame(update);\n    resize();\n    return () => {\n      var _gl$getExtension;\n      cancelAnimationFrame(animateId);\n      window.removeEventListener('resize', resize);\n      if (ctn && gl.canvas.parentNode === ctn) {\n        ctn.removeChild(gl.canvas);\n      }\n      (_gl$getExtension = gl.getExtension('WEBGL_lose_context')) === null || _gl$getExtension === void 0 ? void 0 : _gl$getExtension.loseContext();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [amplitude]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ctnDom,\n    className: \"aurora-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 10\n  }, this);\n}\n_s(Aurora, \"H3hEXxgRK/TFJBuH98B1fA30BZI=\");\n_c = Aurora;\nvar _c;\n$RefreshReg$(_c, \"Aurora\");","map":{"version":3,"names":["Renderer","Program","Mesh","Color","Triangle","useEffect","useRef","jsxDEV","_jsxDEV","VERT","FRAG","Aurora","props","_s","colorStops","amplitude","blend","propsRef","current","ctnDom","ctn","renderer","alpha","premultipliedAlpha","antialias","gl","clearColor","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","canvas","style","backgroundColor","program","resize","width","offsetWidth","height","offsetHeight","setSize","uniforms","uResolution","value","window","addEventListener","geometry","attributes","uv","colorStopsArray","map","hex","c","r","g","b","vertex","fragment","uTime","uAmplitude","uColorStops","uBlend","mesh","appendChild","animateId","update","t","_propsRef$current$amp","_propsRef$current$ble","_propsRef$current$col","requestAnimationFrame","time","speed","stops","render","scene","_gl$getExtension","cancelAnimationFrame","removeEventListener","parentNode","removeChild","getExtension","loseContext","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["Z:/Alezin/alessandrozingaretti_web/il-mio-progetto-react/src/Aurora.jsx"],"sourcesContent":["import { Renderer, Program, Mesh, Color, Triangle } from 'ogl';\r\nimport { useEffect, useRef } from 'react';\r\n\r\nimport './Aurora.css';\r\n\r\nconst VERT = `#version 300 es\r\nin vec2 position;\r\nvoid main() {\r\n  gl_Position = vec4(position, 0.0, 1.0);\r\n}\r\n`;\r\n\r\nconst FRAG = `#version 300 es\r\nprecision highp float;\r\n\r\nuniform float uTime;\r\nuniform float uAmplitude;\r\nuniform vec3 uColorStops[3];\r\nuniform vec2 uResolution;\r\nuniform float uBlend;\r\n\r\nout vec4 fragColor;\r\n\r\nvec3 permute(vec3 x) {\r\n  return mod(((x * 34.0) + 1.0) * x, 289.0);\r\n}\r\n\r\nfloat snoise(vec2 v){\r\n  const vec4 C = vec4(\r\n      0.211324865405187, 0.366025403784439,\r\n      -0.577350269189626, 0.024390243902439\r\n  );\r\n  vec2 i  = floor(v + dot(v, C.yy));\r\n  vec2 x0 = v - i + dot(i, C.xx);\r\n  vec2 i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\r\n  vec4 x12 = x0.xyxy + C.xxzz;\r\n  x12.xy -= i1;\r\n  i = mod(i, 289.0);\r\n\r\n  vec3 p = permute(\r\n      permute(i.y + vec3(0.0, i1.y, 1.0))\r\n    + i.x + vec3(0.0, i1.x, 1.0)\r\n  );\r\n\r\n  vec3 m = max(\r\n      0.5 - vec3(\r\n          dot(x0, x0),\r\n          dot(x12.xy, x12.xy),\r\n          dot(x12.zw, x12.zw)\r\n      ), \r\n      0.0\r\n  );\r\n  m = m * m;\r\n  m = m * m;\r\n\r\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\r\n  vec3 h = abs(x) - 0.5;\r\n  vec3 ox = floor(x + 0.5);\r\n  vec3 a0 = x - ox;\r\n  m *= 1.79284291400159 - 0.85373472095314 * (a0*a0 + h*h);\r\n\r\n  vec3 g;\r\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\r\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\r\n  return 130.0 * dot(m, g);\r\n}\r\n\r\nstruct ColorStop {\r\n  vec3 color;\r\n  float position;\r\n};\r\n\r\n#define COLOR_RAMP(colors, factor, finalColor) {              \\\r\n  int index = 0;                                            \\\r\n  for (int i = 0; i < 2; i++) {                               \\\r\n     ColorStop currentColor = colors[i];                    \\\r\n     bool isInBetween = currentColor.position <= factor;    \\\r\n     index = int(mix(float(index), float(i), float(isInBetween))); \\\r\n  }                                                         \\\r\n  ColorStop currentColor = colors[index];                   \\\r\n  ColorStop nextColor = colors[index + 1];                  \\\r\n  float range = nextColor.position - currentColor.position; \\\r\n  float lerpFactor = (factor - currentColor.position) / range; \\\r\n  finalColor = mix(currentColor.color, nextColor.color, lerpFactor); \\\r\n}\r\n\r\nvoid main() {\r\n  vec2 uv = gl_FragCoord.xy / uResolution;\r\n  \r\n  ColorStop colors[3];\r\n  colors[0] = ColorStop(uColorStops[0], 0.0);\r\n  colors[1] = ColorStop(uColorStops[1], 0.5);\r\n  colors[2] = ColorStop(uColorStops[2], 1.0);\r\n  \r\n  vec3 rampColor;\r\n  COLOR_RAMP(colors, uv.x, rampColor);\r\n  \r\n  float height = snoise(vec2(uv.x * 2.0 + uTime * 0.1, uTime * 0.25)) * 0.5 * uAmplitude;\r\n  height = exp(height);\r\n  height = (uv.y * 2.0 - height + 0.2);\r\n  float intensity = 0.6 * height;\r\n  \r\n  float midPoint = 0.20;\r\n  float auroraAlpha = smoothstep(midPoint - uBlend * 0.5, midPoint + uBlend * 0.5, intensity);\r\n  \r\n  vec3 auroraColor = intensity * rampColor;\r\n  \r\n  fragColor = vec4(auroraColor * auroraAlpha, auroraAlpha);\r\n}\r\n`;\r\n\r\nexport default function Aurora(props) {\r\n  const { colorStops = ['#5227FF', '#7cff67', '#5227FF'], amplitude = 1.0, blend = 0.5 } = props;\r\n  const propsRef = useRef(props);\r\n  propsRef.current = props;\r\n\r\n  const ctnDom = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const ctn = ctnDom.current;\r\n    if (!ctn) return;\r\n\r\n    const renderer = new Renderer({\r\n      alpha: true,\r\n      premultipliedAlpha: true,\r\n      antialias: true\r\n    });\r\n    const gl = renderer.gl;\r\n    gl.clearColor(0, 0, 0, 0);\r\n    gl.enable(gl.BLEND);\r\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n    gl.canvas.style.backgroundColor = 'transparent';\r\n\r\n    let program;\r\n\r\n    function resize() {\r\n      if (!ctn) return;\r\n      const width = ctn.offsetWidth;\r\n      const height = ctn.offsetHeight;\r\n      renderer.setSize(width, height);\r\n      if (program) {\r\n        program.uniforms.uResolution.value = [width, height];\r\n      }\r\n    }\r\n    window.addEventListener('resize', resize);\r\n\r\n    const geometry = new Triangle(gl);\r\n    if (geometry.attributes.uv) {\r\n      delete geometry.attributes.uv;\r\n    }\r\n\r\n    const colorStopsArray = colorStops.map(hex => {\r\n      const c = new Color(hex);\r\n      return [c.r, c.g, c.b];\r\n    });\r\n\r\n    program = new Program(gl, {\r\n      vertex: VERT,\r\n      fragment: FRAG,\r\n      uniforms: {\r\n        uTime: { value: 0 },\r\n        uAmplitude: { value: amplitude },\r\n        uColorStops: { value: colorStopsArray },\r\n        uResolution: { value: [ctn.offsetWidth, ctn.offsetHeight] },\r\n        uBlend: { value: blend }\r\n      }\r\n    });\r\n\r\n    const mesh = new Mesh(gl, { geometry, program });\r\n    ctn.appendChild(gl.canvas);\r\n\r\n    let animateId = 0;\r\n    const update = t => {\r\n      animateId = requestAnimationFrame(update);\r\n      const { time = t * 0.01, speed = 1.0 } = propsRef.current;\r\n      program.uniforms.uTime.value = time * speed * 0.1;\r\n      program.uniforms.uAmplitude.value = propsRef.current.amplitude ?? 1.0;\r\n      program.uniforms.uBlend.value = propsRef.current.blend ?? blend;\r\n      const stops = propsRef.current.colorStops ?? colorStops;\r\n      program.uniforms.uColorStops.value = stops.map(hex => {\r\n        const c = new Color(hex);\r\n        return [c.r, c.g, c.b];\r\n      });\r\n      renderer.render({ scene: mesh });\r\n    };\r\n    animateId = requestAnimationFrame(update);\r\n\r\n    resize();\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animateId);\r\n      window.removeEventListener('resize', resize);\r\n      if (ctn && gl.canvas.parentNode === ctn) {\r\n        ctn.removeChild(gl.canvas);\r\n      }\r\n      gl.getExtension('WEBGL_lose_context')?.loseContext();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [amplitude]);\r\n\r\n  return <div ref={ctnDom} className=\"aurora-container\" />;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}